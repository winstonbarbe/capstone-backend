{
  mutual_matches: @mutual_matches.map do |match|
    mutual_match = render partial: "match.json.jb", locals: { match: match}
    if match.sender != current_user
      matcher = User.find(match.sender_id)
    else
      matcher = User.find(match.recipient_id)
    end
    mutual_match[:matcher] = render partial: "api/users/user.json.jb", locals: { user: matcher }

    mutual_match[:matcher][:distance] =  current_user.distance_to(matcher).round(1)

    if match.messages.last 
      mutual_match[:last_message] = render partial: "api/messages/message.json.jb", locals: { message: match.messages.last }
    else 
      mutual_match[:last_message] = nil
    end

    if matcher.images.first
      mutual_match[:matcher][:image_url] = matcher.images.first.path
    end
    
    mutual_match
  end,
  received_matches: @received_matches.map do |match|
    matcher = User.find(match.sender_id)
    received_match = render partial: "match.json.jb", locals: { match: match}
    received_match[:matcher] = render partial: "api/users/user.json.jb", locals: { user: matcher}
    received_match[:matcher][:distance] =  current_user.distance_to(matcher).round(1)
    if matcher.images.first
      received_match[:matcher][:image_url] = matcher.images.first.path
    end
    received_match
  end
}
